"""
数値の計算に関する説明で、誤っているものはどれか。

選択 1

除算（/）は常にfloat型の結果を返す。切り下げ除算を行なって整数解を得たい場合は//演算子を使う。

選択 2

剰余のみを得たい場合は%演算子を使う。

選択 3

累乗（**）は掛け算や割り算よりも優先順位が低い。

選択 4

対話モードでは、最後に表示した式は変数「_」（アンダースコア）に代入される。

"""

"""


選択 1
"除算（/）は常にfloat型の結果を返す。切り下げ除算を行なって整数解を得たい場合は//演算子を使う。"

これは正しいです。Pythonでは、通常の除算（/）は除数と被除数のいずれか、または両方が整数であっても、常に浮動小数点数（float型）の結果を返します。整数の結果が必要な場合は、切り下げ除算（//）を使用します。

選択 2
"剰余のみを得たい場合は%演算子を使う。"

これも正しいです。%演算子は剰余演算子であり、除算の結果生じる剰余を求めるために使用されます。

選択 3
"累乗（**）は掛け算や割り算よりも優先順位が低い。"

これは誤りです。Pythonの演算子の優先順位において、累乗（**）は掛け算（*）、割り算（/）、切り下げ除算（//）、剰余演算（%）よりも優先順位が高いです。つまり、累乗演算が最初に評価され、その後に掛け算、割り算などが行われます。

選択 4
"対話モードでは、最後に表示した式は変数「_」（アンダースコア）に代入される。"

これは正しいです。Pythonの対話モードでは、最後に評価された式の結果は特別な変数_に自動的に割り当てられます。これにより、ユーザーは直前の操作の結果を簡単に参照できます。

結論として、誤っている説明は選択 3「累乗（）は掛け算や割り算よりも優先順位が低い」です。**累乗の優先順位は掛け算や割り算よりも高いです。
"""
